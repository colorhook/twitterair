<?xml version="1.0" encoding="utf-8"?>
<mx:List xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:view="com.colorhook.twitterair.view.*">
	<mx:Script>
		<![CDATA[
			[Bindable]public var retweetEnabled:Boolean=true;
			[Bindable]public var replyEnabled:Boolean=true;
			[Bindable]public var isUserType:Boolean=false;
			
			public function replyTweet(tweetId:Number,username:String):void{
				var event:UIEvent=new UIEvent(UIEvent.REPLY_TWITTER);
				event.tweetId=tweetId;
				event.replyUsername=username;
				dispatchEvent(event);
			}
			public function retweet(data:*):void{
				var event:UIEvent=new UIEvent(UIEvent.RETWEET_TWITTER);
				event.status=data.text;
				event.tweetId=data.tweetId;
				event.screenName=data.screenName;
				dispatchEvent(event);
			}
			public function favoriteTweet(tweetId:Number):void{
				var event:UIEvent=new UIEvent(UIEvent.FAVORITE_TWITTER);
				event.tweetId=tweetId;
				dispatchEvent(event);
			}
			public function deleteTweet(tweetId:Number):void{
				var event:UIEvent=new UIEvent(UIEvent.DELETE_TWITTER);
				event.tweetId=tweetId;
				dispatchEvent(event);
			}
			public function browseUser(screenName:String):void{
				var event:UIEvent=new UIEvent(UIEvent.BROWSE_USER);
				event.screenName=screenName;
				dispatchEvent(event);
			}
		]]>
	</mx:Script>
	<mx:itemRenderer>
		<mx:Component>
				<mx:HBox width="100%" height="60" verticalGap="0">
					<mx:VBox verticalGap="0">
						<mx:Spacer height="6"/>
						<view:TwitterHead width="48" height="48" source="{data.profileImageUrl}"
									visible="{!outerDocument.isUserType}" 
									includeInLayout="{!outerDocument.isUserType}"
									scaleContent="true" doubleClickEnabled="true" 
									doubleClick="screenNameClicked()"/>
					</mx:VBox>
					
					<mx:VBox width="100%" height="100%" verticalGap="0">
						<mx:HBox width="100%" height="20">
							<mx:HBox width="120">
								<mx:Text text="{data.screenName}" fontWeight="bold"
									styleName="twitterScreenUser" width="120"/>
							</mx:HBox>
							<mx:Label  htmlText="{data.createAt}" styleName="twitterCreateAt" width="280"/>
							<mx:Spacer width="20"/>
							<mx:Button styleName="twitterReply" toolTip="reply"
									visible="{outerDocument.replyEnabled}" 
									click="replyHandler(event)"/>
							<mx:Button styleName="twitterRetweet" toolTip="retweet"
									visible="{outerDocument.retweetEnabled}" 
									click="retweetHandler(event)"/>
							<mx:Button styleName="twitterFavorite" toolTip="favorite this tweet"
									click="favoriteHandler(event)" includeInLayout="false" visible="false"/>
							<mx:Button styleName="twitterDelete" toolTip="delete this tweet"
								    click="deleteHandler(event)" visible="{data.isMyTweet}"/>
						</mx:HBox>
						<mx:Canvas width="100%" height="100%" backgroundAlpha="0">
							<mx:Text width="100%" height="100%" text="{data.text}" styleName="twitterTweet"/>
						</mx:Canvas>
					</mx:VBox>
					<mx:Script>
						<![CDATA[
							import com.colorhook.twitterair.model.MessageConst;
							import mx.events.CloseEvent;
							import mx.controls.Alert;
					
							private function replyHandler(event:MouseEvent):void{
								outerDocument.replyTweet(data.tweetId,data.screenName);
							}
							private function retweetHandler(event:MouseEvent):void{
								/*Alert.show(MessageConst.RETWEET_MESSAGE,"",
										Alert.YES|Alert.NO,null,retweetCloseHandler);*/
								outerDocument.retweet(data);
							}
							private function retweetCloseHandler(event:CloseEvent):void{
								if(event.detail==Alert.YES){
									
								}
							}
							private function favoriteHandler(event:MouseEvent):void{
								outerDocument.favoriteTweet(data.tweetId);
							}
							private function deleteHandler(event:MouseEvent):void{
								Alert.show(MessageConst.DELETE_TWITTER_MESSAGE,"",
										Alert.YES|Alert.NO,null,deleteCloseHandler);
							}
							private function deleteCloseHandler(event:CloseEvent):void{
								if(event.detail==Alert.YES){
									outerDocument.deleteTweet(data.tweetId);
								}
							}
							private function screenNameClicked():void{
								outerDocument.browseUser(data.screenName);
							}
						]]>
					</mx:Script>
				</mx:HBox>
		</mx:Component>
	</mx:itemRenderer>
</mx:List>
